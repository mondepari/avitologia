version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketing-site-app
    restart: always
    expose:
      - "5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/marketingdb
    depends_on:
      - db
    networks:
      - marketing-network
    volumes:
      - uploads:/app/uploads

  db:
    image: postgres:14-alpine
    container_name: marketing-site-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=marketingdb
    expose:
      - "5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - marketing-network

  nginx:
    image: nginx:alpine
    container_name: marketing-site-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - marketing-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: marketing-site-certbot
    restart: always
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  marketing-network:
    driver: bridge

volumes:
  postgres-data:
  uploads: